generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String   @id @default(cuid())
  email        String   @unique
  username     String   @unique
  passwordHash String   @map("password_hash")
  firstName    String?  @map("first_name")
  lastName     String?  @map("last_name")
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @updatedAt @map("updated_at")

  // Relations
  transactions Transaction[]
  budgets      Budget[]
  goals        Goal[]

  @@map("users")
}

model Transaction {
  id          String   @id @default(cuid())
  userId      String   @map("user_id")
  amount      Decimal  @db.Decimal(12, 2)
  category    String
  date        DateTime
  description String?
  createdAt   DateTime @default(now()) @map("created_at")

  // Relations
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("transactions")
}

model Budget {
  id             String  @id @default(cuid())
  userId         String  @map("user_id")
  category       String
  budgetedAmount Decimal @map("budgeted_amount") @db.Decimal(12, 2)
  actualAmount   Decimal @default(0) @map("actual_amount") @db.Decimal(12, 2)
  month          Int
  year           Int
  createdAt      DateTime @default(now()) @map("created_at")

  // Relations
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("budgets")
}

model Goal {
  id            String   @id @default(cuid())
  userId        String   @map("user_id")
  name          String
  targetAmount  Decimal  @map("target_amount") @db.Decimal(12, 2)
  currentAmount Decimal  @default(0) @map("current_amount") @db.Decimal(12, 2)
  dueDate       DateTime @map("due_date")
  createdAt     DateTime @default(now()) @map("created_at")

  // Relations
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("goals")
}